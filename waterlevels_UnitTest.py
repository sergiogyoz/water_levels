import water_levels as wal
import matplotlib.pyplot as plt
import datetime


data=wal.WaterLevels.from_csvfile(
    csvfile="waterlevels_UnitTest.csv",
    headers=True,
    dateformat="%m/%d/%Y %H:%M");

def something_broke(stuff=""):
    raise Exception("Unit test failed: "+stuff);

def csv_reading_check():
    if data.first_date!=datetime.date(1891, 2, 26): something_broke("first date");
    if data.last_date!=datetime.date(1892, 1, 5): something_broke("last date");
    
    realdates=[datetime.date(1891, 2, 26),
        datetime.date(1891, 2, 27),
        datetime.date(1891, 2, 28),
        datetime.date(1891, 3, 26),
        datetime.date(1891, 3, 27),
        datetime.date(1891, 3, 28),
        datetime.date(1891, 3, 29),
        datetime.date(1891, 3, 30),
        datetime.date(1891, 3, 31),
        datetime.date(1891, 4, 1),
        datetime.date(1891, 4, 2),
        datetime.date(1891, 4, 3),
        datetime.date(1891, 4, 4),
        datetime.date(1891, 4, 5),
        datetime.date(1891, 4, 6),
        datetime.date(1891, 4, 7),
        datetime.date(1891, 4, 8),
        datetime.date(1891, 4, 9),
        datetime.date(1891, 4, 10),
        datetime.date(1891, 4, 11),
        datetime.date(1891, 4, 12),
        datetime.date(1891, 4, 13),
        datetime.date(1891, 4, 14),
        datetime.date(1891, 4, 15),
        datetime.date(1891, 4, 16),
        datetime.date(1891, 4, 17),
        datetime.date(1891, 4, 18),
        datetime.date(1891, 4, 19),
        datetime.date(1891, 4, 20),
        datetime.date(1891, 4, 21),
        datetime.date(1891, 4, 22),
        datetime.date(1891, 4, 23),
        datetime.date(1891, 4, 24),
        datetime.date(1891, 4, 25),
        datetime.date(1891, 4, 26),
        datetime.date(1891, 4, 27),
        datetime.date(1891, 4, 28),
        datetime.date(1891, 4, 29),
        datetime.date(1891, 4, 30),
        datetime.date(1891, 5, 1),
        datetime.date(1891, 5, 2),
        datetime.date(1891, 5, 3),
        datetime.date(1891, 5, 4),
        datetime.date(1891, 5, 5),
        datetime.date(1891, 5, 6),
        datetime.date(1891, 5, 7),
        datetime.date(1891, 5, 8),
        datetime.date(1891, 5, 9),
        datetime.date(1891, 5, 10),
        datetime.date(1891, 5, 11),
        datetime.date(1891, 5, 12),
        datetime.date(1891, 5, 13),
        datetime.date(1891, 5, 14),
        datetime.date(1891, 5, 15),
        datetime.date(1891, 5, 16),
        datetime.date(1891, 5, 17),
        datetime.date(1891, 5, 18),
        datetime.date(1891, 5, 19),
        datetime.date(1891, 5, 20),
        datetime.date(1891, 5, 21),
        datetime.date(1891, 5, 22),
        datetime.date(1891, 5, 23),
        datetime.date(1891, 5, 24),
        datetime.date(1891, 5, 25),
        datetime.date(1891, 5, 26),
        datetime.date(1891, 5, 27),
        datetime.date(1891, 5, 28),
        datetime.date(1891, 5, 29),
        datetime.date(1891, 5, 30),
        datetime.date(1891, 5, 31),
        datetime.date(1891, 6, 1),
        datetime.date(1891, 6, 2),
        datetime.date(1891, 6, 3),
        datetime.date(1891, 6, 4),
        datetime.date(1891, 6, 5),
        datetime.date(1891, 6, 6),
        datetime.date(1891, 6, 7),
        datetime.date(1891, 6, 8),
        datetime.date(1891, 6, 9),
        datetime.date(1891, 6, 10),
        datetime.date(1891, 6, 11),
        datetime.date(1891, 6, 12),
        datetime.date(1891, 6, 13),
        datetime.date(1891, 6, 14),
        datetime.date(1891, 6, 15),
        datetime.date(1891, 6, 16),
        datetime.date(1891, 6, 17),
        datetime.date(1891, 6, 18),
        datetime.date(1891, 6, 19),
        datetime.date(1891, 6, 20),
        datetime.date(1891, 6, 21),
        datetime.date(1891, 6, 22),
        datetime.date(1891, 6, 23),
        datetime.date(1891, 6, 24),
        datetime.date(1891, 6, 25),
        datetime.date(1891, 6, 26),
        datetime.date(1891, 6, 27),
        datetime.date(1891, 6, 28),
        datetime.date(1891, 6, 29),
        datetime.date(1891, 6, 30),
        datetime.date(1891, 7, 1),
        datetime.date(1891, 7, 2),
        datetime.date(1891, 7, 3),
        datetime.date(1891, 7, 4),
        datetime.date(1891, 7, 5),
        datetime.date(1891, 7, 6),
        datetime.date(1891, 7, 7),
        datetime.date(1891, 7, 8),
        datetime.date(1891, 7, 9),
        datetime.date(1891, 7, 10),
        datetime.date(1891, 7, 11),
        datetime.date(1891, 7, 12),
        datetime.date(1891, 7, 13),
        datetime.date(1891, 7, 14),
        datetime.date(1891, 7, 15),
        datetime.date(1891, 7, 16),
        datetime.date(1891, 7, 17),
        datetime.date(1891, 7, 18),
        datetime.date(1891, 7, 19),
        datetime.date(1891, 7, 20),
        datetime.date(1891, 7, 21),
        datetime.date(1891, 7, 22),
        datetime.date(1891, 7, 23),
        datetime.date(1891, 7, 24),
        datetime.date(1891, 7, 25),
        datetime.date(1891, 7, 26),
        datetime.date(1891, 7, 27),
        datetime.date(1891, 7, 28),
        datetime.date(1891, 7, 29),
        datetime.date(1891, 7, 30),
        datetime.date(1891, 7, 31),
        datetime.date(1891, 8, 1),
        datetime.date(1891, 8, 2),
        datetime.date(1891, 8, 3),
        datetime.date(1891, 8, 4),
        datetime.date(1891, 8, 5),
        datetime.date(1891, 8, 6),
        datetime.date(1891, 8, 7),
        datetime.date(1891, 8, 8),
        datetime.date(1891, 8, 9),
        datetime.date(1891, 8, 10),
        datetime.date(1891, 8, 11),
        datetime.date(1891, 8, 12),
        datetime.date(1891, 8, 13),
        datetime.date(1891, 8, 14),
        datetime.date(1891, 8, 15),
        datetime.date(1891, 8, 16),
        datetime.date(1891, 8, 17),
        datetime.date(1891, 8, 18),
        datetime.date(1891, 8, 19),
        datetime.date(1891, 8, 20),
        datetime.date(1891, 8, 21),
        datetime.date(1891, 8, 22),
        datetime.date(1891, 8, 23),
        datetime.date(1891, 8, 24),
        datetime.date(1891, 8, 25),
        datetime.date(1891, 8, 26),
        datetime.date(1891, 8, 27),
        datetime.date(1891, 8, 28),
        datetime.date(1891, 8, 29),
        datetime.date(1891, 8, 30),
        datetime.date(1891, 8, 31),
        datetime.date(1891, 9, 1),
        datetime.date(1891, 9, 2),
        datetime.date(1891, 9, 3),
        datetime.date(1891, 9, 4),
        datetime.date(1891, 9, 5),
        datetime.date(1891, 9, 6),
        datetime.date(1891, 9, 7),
        datetime.date(1891, 9, 8),
        datetime.date(1891, 9, 9),
        datetime.date(1891, 9, 10),
        datetime.date(1891, 9, 11),
        datetime.date(1891, 9, 12),
        datetime.date(1891, 9, 13),
        datetime.date(1891, 9, 14),
        datetime.date(1891, 9, 15),
        datetime.date(1891, 9, 16),
        datetime.date(1891, 9, 17),
        datetime.date(1891, 9, 18),
        datetime.date(1891, 9, 19),
        datetime.date(1891, 9, 20),
        datetime.date(1891, 9, 21),
        datetime.date(1891, 9, 22),
        datetime.date(1891, 9, 23),
        datetime.date(1891, 10, 4),
        datetime.date(1891, 10, 5),
        datetime.date(1891, 10, 6),
        datetime.date(1891, 10, 7),
        datetime.date(1891, 10, 8),
        datetime.date(1891, 10, 9),
        datetime.date(1891, 10, 10),
        datetime.date(1891, 10, 11),
        datetime.date(1891, 10, 12),
        datetime.date(1891, 10, 13),
        datetime.date(1891, 10, 14),
        datetime.date(1891, 10, 15),
        datetime.date(1891, 10, 16),
        datetime.date(1891, 10, 17),
        datetime.date(1891, 10, 18),
        datetime.date(1891, 10, 19),
        datetime.date(1891, 10, 20),
        datetime.date(1891, 10, 21),
        datetime.date(1891, 10, 22),
        datetime.date(1891, 10, 23),
        datetime.date(1891, 10, 24),
        datetime.date(1891, 10, 25),
        datetime.date(1891, 10, 26),
        datetime.date(1891, 10, 27),
        datetime.date(1891, 10, 28),
        datetime.date(1891, 10, 29),
        datetime.date(1891, 10, 30),
        datetime.date(1891, 10, 31),
        datetime.date(1891, 11, 1),
        datetime.date(1891, 11, 2),
        datetime.date(1891, 11, 3),
        datetime.date(1891, 11, 4),
        datetime.date(1891, 11, 5),
        datetime.date(1891, 11, 6),
        datetime.date(1891, 11, 7),
        datetime.date(1891, 11, 8),
        datetime.date(1891, 11, 9),
        datetime.date(1891, 11, 10),
        datetime.date(1891, 11, 11),
        datetime.date(1891, 11, 12),
        datetime.date(1891, 11, 13),
        datetime.date(1891, 11, 14),
        datetime.date(1891, 11, 15),
        datetime.date(1891, 11, 16),
        datetime.date(1891, 11, 17),
        datetime.date(1891, 11, 18),
        datetime.date(1891, 11, 19),
        datetime.date(1891, 11, 20),
        datetime.date(1891, 11, 21),
        datetime.date(1891, 11, 22),
        datetime.date(1891, 11, 23),
        datetime.date(1891, 11, 24),
        datetime.date(1891, 11, 25),
        datetime.date(1891, 11, 26),
        datetime.date(1891, 11, 27),
        datetime.date(1891, 12, 14),
        datetime.date(1891, 12, 15),
        datetime.date(1891, 12, 16),
        datetime.date(1891, 12, 17),
        datetime.date(1891, 12, 18),
        datetime.date(1891, 12, 19),
        datetime.date(1891, 12, 20),
        datetime.date(1891, 12, 21),
        datetime.date(1891, 12, 22),
        datetime.date(1891, 12, 23),
        datetime.date(1891, 12, 24),
        datetime.date(1891, 12, 25),
        datetime.date(1892, 1, 4),
        datetime.date(1892, 1, 5)];
    realwl=[591.77,
        591.47,
        100.01,
        200.02,
        591.47,
        590.87,
        590.97,
        591.37,
        592.17,
        592.57,
        593.27,
        593.37,
        593.57,
        594.07,
        594.27,
        594.57,
        594.77,
        595.07,
        595.27,
        595.37,
        595.47,
        595.47,
        595.77,
        595.77,
        595.87,
        595.97,
        596.07,
        596.17,
        596.27,
        596.27,
        596.47,
        596.77,
        597.07,
        597.37,
        597.67,
        597.77,
        597.97,
        598.17,
        598.37,
        598.37,
        598.37,
        598.27,
        598.07,
        597.87,
        597.67,
        597.17,
        596.57,
        596.27,
        595.67,
        594.77,
        594.37,
        593.67,
        593.17,
        592.57,
        592.07,
        591.67,
        591.37,
        590.97,
        590.67,
        590.47,
        590.27,
        590.27,
        590.17,
        589.97,
        589.77,
        589.67,
        589.57,
        589.37,
        589.27,
        589.17,
        588.97,
        588.97,
        589.37,
        588.97,
        588.87,
        588.77,
        588.77,
        588.67,
        588.57,
        588.47,
        588.47,
        588.37,
        588.37,
        588.17,
        588.07,
        587.97,
        587.97,
        588.07,
        588.37,
        588.47,
        588.47,
        588.47,
        588.47,
        588.57,
        588.67,
        588.87,
        589.07,
        589.17,
        589.27,
        589.37,
        588.97,
        589.07,
        589.27,
        588.97,
        588.87,
        588.77,
        589.27,
        589.17,
        589.37,
        589.17,
        589.07,
        588.87,
        588.57,
        588.37,
        588.27,
        588.07,
        587.97,
        587.87,
        587.77,
        587.57,
        587.47,
        587.37,
        587.17,
        587.17,
        587.17,
        587.07,
        586.87,
        586.77,
        586.77,
        586.77,
        586.77,
        586.67,
        586.67,
        586.67,
        586.67,
        586.57,
        586.47,
        586.47,
        586.47,
        586.37,
        586.27,
        586.27,
        586.27,
        586.17,
        586.27,
        586.27,
        586.17,
        586.17,
        586.07,
        586.07,
        586.07,
        586.07,
        586.07,
        586.07,
        586.07,
        586.07,
        585.97,
        586.07,
        586.07,
        586.07,
        586.07,
        586.07,
        586.07,
        585.97,
        586.07,
        586.07,
        585.97,
        585.97,
        585.97,
        585.97,
        585.97,
        585.87,
        585.87,
        585.87,
        585.87,
        585.87,
        585.97,
        585.97,
        585.87,
        585.87,
        585.67,
        585.67,
        585.67,
        585.67,
        585.57,
        585.67,
        585.67,
        585.87,
        586.17,
        586.27,
        586.37,
        586.37,
        586.37,
        586.47,
        586.47,
        586.87,
        586.97,
        586.97,
        587.07,
        586.87,
        586.87,
        300.03,
        586.67,
        586.67,
        586.57,
        586.57,
        586.57,
        586.57,
        586.57,
        586.57,
        586.57,
        586.47,
        586.37,
        586.37,
        586.37,
        586.27,
        586.27,
        586.27,
        586.27,
        586.27,
        586.37,
        586.37,
        586.27,
        586.27,
        586.27,
        586.17,
        586.17,
        586.17,
        586.07,
        585.87,
        585.87,
        585.87,
        586.17,
        585.77,
        585.67,
        585.67,
        585.77,
        585.67,
        585.57,
        585.97,
        587.67,
        587.97,
        588.47,
        588.67,
        587.17,
        587.67,
        587.17,
        587.17,
        587.27,
        587.67,
        587.87,
        588.17,
        400.04,
        588.17]

    if(data.n!=len(realdates)): something_broke("n size is wrong");
    for i in range(data.n):
        if(data.dates[i]!=realdates[i]): something_broke(f"dates don't fit at index {i}: {data.dates[i]} vs {realdates[i]}");
        if(data.wl[i]!=realwl[i]): something_broke(f"water levels don't fit at index {i}: {data.wl[i]} vs {realwl[i]}");

def round_check():
    msg="rounding not working well";
    try:
        wal.WaterLevels.round_date(data, datetime.date(1890,11,3));
        something_broke(msg);
    except KeyError:
        pass;
    if wal.WaterLevels.round_date(data, datetime.date(1890,11,3),roundup=True)!=datetime.date(1891, 2, 26): something_broke(msg);
    if wal.WaterLevels.round_date(data, datetime.date(1891,3,7))!=datetime.date(1891, 2, 28): something_broke(msg);
    if wal.WaterLevels.round_date(data, datetime.date(1891,3,7),roundup=True)!=datetime.date(1891, 3, 26): something_broke(msg);
    if wal.WaterLevels.round_date(data, datetime.date(1892,2,20))!=datetime.date(1892, 1, 5): something_broke(msg);
    try:
        wal.WaterLevels.round_date(data, datetime.date(1892,2,20),roundup=True);
        something_broke(msg);
    except KeyError:
        pass;

def gets_check():
    if data.getdate([2,3,201,252])!=[
            datetime.date(1891, 2, 28),
            datetime.date(1891, 3, 26),
            datetime.date(1891,10, 20),
            datetime.date(1892, 1, 4)
            ] : something_broke("getdate broke");
    if data.getwl([2,3,201,252])!=[100.01,200.02,300.03,400.04] :something_broke("getwl broke");   
    if data.get_time_window(datetime.date(1891, 1, 1), datetime.date(1891,4,1))!= [
            591.77, 591.47, 100.01, 200.02, 591.47, 590.87, 590.97, 591.37, 592.17, 592.57
            ]: something_broke("time window broke");

    
def missing_days_check(): 
    num=wal.WaterLevels.num_missing_dates(data, datetime.date(1891, 1, 1), datetime.date(1891, 12, 31));
    if num!=113 : something_broke("number of missing days");
    
    if wal.WaterLevels.is_missing_dates(data, datetime.date(1891,10,4), datetime.date(1891,11,27)):
        something_broke("is_missing days is (strangely) broken")
    if not wal.WaterLevels.is_missing_dates(data, datetime.date(1891,10,1), datetime.date(1891,11,27)):
        something_broke("is_missing days is (strangely) broken")    
    realmissingdates=[
        (datetime.date(1891, 2, 1),datetime.date(1891,2,25)),
        (datetime.date(1891, 3, 1),datetime.date(1891,3,25)),
        (datetime.date(1891, 9, 24),datetime.date(1891,10,3)),
        (datetime.date(1891, 11, 28),datetime.date(1891,12,13)),
        (datetime.date(1891, 12, 26),datetime.date(1892,1,3)),
        (datetime.date(1892, 1, 6),datetime.date(1892,1,31)),
        ]
    if wal.WaterLevels.missing_dates(data, datetime.date(1891,2,1), datetime.date(1892, 1, 31))!=realmissingdates:
        something_broke("ranges of missing dates are wrong");
    if wal.WaterLevels.is_missing_in_a_row(data, datetime.date(1891,2,1), datetime.date(1891,2,9), 10):
        something_broke("missing more days than there are");
    if not wal.WaterLevels.is_missing_in_a_row(data, datetime.date(1891,9,1), datetime.date(1891,10,31), 10):
        something_broke("number of days missing in a row having issues");
    if wal.WaterLevels.is_missing_in_a_row(data, datetime.date(1891,9,1), datetime.date(1891,10,31), 11):
        something_broke("number of days missing in a row having issues");

def checks_check():
    if not wal.WaterLevels.check_time_window(data, datetime.date(1891, 2, 1), datetime.date(1891, 2, 10), miss_days_tol=11, consecutive_days_missed=11 ) \
    or wal.WaterLevels.check_time_window(data, datetime.date(1891, 2, 1), datetime.date(1891, 2, 10), miss_days_tol=10, consecutive_days_missed=10 ):
        something_broke("check time window function on limits of data is having issues");
    if not wal.WaterLevels.check_time_window(data, datetime.date(1891, 2, 1), datetime.date(1891, 2, 28),miss_days_tol=30,consecutive_days_missed=30):
        something_broke("check with ample missdays and consecdays tolerance is not passing");
    if wal.WaterLevels.check_time_window(data, datetime.date(1891, 2, 23), datetime.date(1891, 3, 3),miss_days_tol=6,consecutive_days_missed=6):
        something_broke("check with exact number of missing dates is not failing");
    if wal.WaterLevels.check_time_window(data, datetime.date(1891, 2, 23), datetime.date(1891, 3, 3),miss_days_tol=7,consecutive_days_missed=3):
        something_broke("check with exact number of missing consecutive dates is not failing");
    if wal.WaterLevels.check_time_window(data, datetime.date(1891, 2, 23), datetime.date(1891, 3, 3),miss_days_tol=6,consecutive_days_missed=3):
        something_broke("check with exact number of both missing and consecutive dates is not failing");
    if not wal.WaterLevels.check_time_window(data, datetime.date(1891, 2, 23), datetime.date(1891, 3, 3),miss_days_tol=7,consecutive_days_missed=4):
        something_broke("check with exact number of both missing and consecutive dates is not passing");


def all_checks():
    """
    Gives an error if any of the function checks fails
    """
    csv_reading_check();
    gets_check();
    round_check();
    missing_days_check();
    checks_check();
    
all_checks();

"""
Created on Wed Jun 23 12:51:22 2021

@author: svillamaringomez
"""

